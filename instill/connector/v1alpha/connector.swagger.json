{
  "swagger": "2.0",
  "info": {
    "title": "instill/connector/v1alpha/connector.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ConnectorService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/__liveness": {
      "get": {
        "summary": "Liveness method receives a LivenessRequest message and returns a\nLivenessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "ConnectorService_Liveness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillconnectorv1alphaLivenessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/__readiness": {
      "get": {
        "summary": "Readiness method receives a ReadinessRequest message and returns a\nReadinessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "ConnectorService_Readiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillconnectorv1alphaReadinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/connector-destination-definitions": {
      "get": {
        "summary": "ListDestinationDefinition method receives a ListDestinationDefinitionRequest message and returns\na ListDestinationDefinitionResponse message.",
        "operationId": "ConnectorService_ListDestinationDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListDestinationDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "Page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_cursor",
            "description": "Page cursor.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "Definition view (default is DEFINITION_VIEW_BASIC).\n\n - DEFINITION_VIEW_UNSPECIFIED: DefinitionView: UNSPECIFIED\n - DEFINITION_VIEW_BASIC: DefinitionView: BASIC\n - DEFINITION_VIEW_FULL: DefinitionView: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFINITION_VIEW_UNSPECIFIED",
              "DEFINITION_VIEW_BASIC",
              "DEFINITION_VIEW_FULL"
            ],
            "default": "DEFINITION_VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/connector-destination-definitions/{id}": {
      "get": {
        "summary": "GetDestinationDefinition method receives a GetDestinationDefinitionRequest message and returns\na GetDestinationDefinitionResponse message.",
        "operationId": "ConnectorService_GetDestinationDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetDestinationDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Connector ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "description": "Definition view (default is DEFINITION_VIEW_BASIC).\n\n - DEFINITION_VIEW_UNSPECIFIED: DefinitionView: UNSPECIFIED\n - DEFINITION_VIEW_BASIC: DefinitionView: BASIC\n - DEFINITION_VIEW_FULL: DefinitionView: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFINITION_VIEW_UNSPECIFIED",
              "DEFINITION_VIEW_BASIC",
              "DEFINITION_VIEW_FULL"
            ],
            "default": "DEFINITION_VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/connector-source-definitions": {
      "get": {
        "summary": "ListSourceDefinition method receives a ListSourceDefinitionRequest message and returns\na ListSourceDefinitionResponse message.",
        "operationId": "ConnectorService_ListSourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListSourceDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "Page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_cursor",
            "description": "Page cursor.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "Definition view (default is DEFINITION_VIEW_BASIC).\n\n - DEFINITION_VIEW_UNSPECIFIED: DefinitionView: UNSPECIFIED\n - DEFINITION_VIEW_BASIC: DefinitionView: BASIC\n - DEFINITION_VIEW_FULL: DefinitionView: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFINITION_VIEW_UNSPECIFIED",
              "DEFINITION_VIEW_BASIC",
              "DEFINITION_VIEW_FULL"
            ],
            "default": "DEFINITION_VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/connector-source-definitions/{id}": {
      "get": {
        "summary": "GetSourceDefinition method receives a GetSourceDefinitionRequest message and returns\na GetSourceDefinitionResponse message.",
        "operationId": "ConnectorService_GetSourceDefinition",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetSourceDefinitionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Connector UUID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "description": "Definition view (default is DEFINITION_VIEW_BASIC).\n\n - DEFINITION_VIEW_UNSPECIFIED: DefinitionView: UNSPECIFIED\n - DEFINITION_VIEW_BASIC: DefinitionView: BASIC\n - DEFINITION_VIEW_FULL: DefinitionView: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "DEFINITION_VIEW_UNSPECIFIED",
              "DEFINITION_VIEW_BASIC",
              "DEFINITION_VIEW_FULL"
            ],
            "default": "DEFINITION_VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/connectors": {
      "get": {
        "summary": "ListConnector method receives a ListConnectorRequest message and returns\na ListConnectorResponse message.",
        "operationId": "ConnectorService_ListConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "connector_type",
            "description": "Requested connector type.\n\n - CONNECTOR_TYPE_UNSPECIFIED: ConnectorType: UNSPECIFIED\n - CONNECTOR_TYPE_SOURCE: ConnectorType: SOURCE\n - CONNECTOR_TYPE_DESTINATION: ConnectorType: DESTINATION",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CONNECTOR_TYPE_UNSPECIFIED",
              "CONNECTOR_TYPE_SOURCE",
              "CONNECTOR_TYPE_DESTINATION"
            ],
            "default": "CONNECTOR_TYPE_UNSPECIFIED"
          },
          {
            "name": "page_size",
            "description": "Page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_cursor",
            "description": "Page cursor.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "post": {
        "summary": "CreateConnector method receives a CreateConnectorRequest message and returns\na CreateConnectorResponse message.",
        "operationId": "ConnectorService_CreateConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaCreateConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaCreateConnectorRequest"
            }
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/connectors/{name}": {
      "get": {
        "summary": "GetConnector method receives a GetConnectorRequest message and returns\na GetConnectorResponse message.",
        "operationId": "ConnectorService_GetConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Connector name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connector_type",
            "description": "Requested connector type.\n\n - CONNECTOR_TYPE_UNSPECIFIED: ConnectorType: UNSPECIFIED\n - CONNECTOR_TYPE_SOURCE: ConnectorType: SOURCE\n - CONNECTOR_TYPE_DESTINATION: ConnectorType: DESTINATION",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CONNECTOR_TYPE_UNSPECIFIED",
              "CONNECTOR_TYPE_SOURCE",
              "CONNECTOR_TYPE_DESTINATION"
            ],
            "default": "CONNECTOR_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "delete": {
        "summary": "DeleteConnector method receives a DeleteConnectorRequest message and returns\na DeleteConnectorResponse message.",
        "operationId": "ConnectorService_DeleteConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaDeleteConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Connector name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "connector_type",
            "description": "Requested connector type.\n\n - CONNECTOR_TYPE_UNSPECIFIED: ConnectorType: UNSPECIFIED\n - CONNECTOR_TYPE_SOURCE: ConnectorType: SOURCE\n - CONNECTOR_TYPE_DESTINATION: ConnectorType: DESTINATION",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CONNECTOR_TYPE_UNSPECIFIED",
              "CONNECTOR_TYPE_SOURCE",
              "CONNECTOR_TYPE_DESTINATION"
            ],
            "default": "CONNECTOR_TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      },
      "patch": {
        "summary": "UpdateConnector method receives a UpdateConnectorRequest message and returns\na UpdateConnectorResponse message.",
        "operationId": "ConnectorService_UpdateConnector",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaUpdateConnectorResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Connector name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Connector patch to update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaUpdateConnectorPatch"
            }
          },
          {
            "name": "connector_type",
            "description": "Requested connector type.\n\n - CONNECTOR_TYPE_UNSPECIFIED: ConnectorType: UNSPECIFIED\n - CONNECTOR_TYPE_SOURCE: ConnectorType: SOURCE\n - CONNECTOR_TYPE_DESTINATION: ConnectorType: DESTINATION",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CONNECTOR_TYPE_UNSPECIFIED",
              "CONNECTOR_TYPE_SOURCE",
              "CONNECTOR_TYPE_DESTINATION"
            ],
            "default": "CONNECTOR_TYPE_UNSPECIFIED"
          },
          {
            "name": "field_mask",
            "description": "Update mask for a connector instance.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    },
    "/health/connector": {
      "get": {
        "summary": "Liveness method receives a LivenessRequest message and returns a\nLivenessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "ConnectorService_Liveness2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillconnectorv1alphaLivenessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ConnectorService"
        ]
      }
    }
  },
  "definitions": {
    "AdvancedAuthAuthFlowType": {
      "type": "string",
      "enum": [
        "AUTH_FLOW_TYPE_UNSPECIFIED",
        "AUTH_FLOW_TYPE_OAUTH2_0",
        "AUTH_FLOW_TYPE_OAUTH1_0"
      ],
      "default": "AUTH_FLOW_TYPE_UNSPECIFIED",
      "description": "- AUTH_FLOW_TYPE_UNSPECIFIED: AuthFlowType: AUTH_TYPE_UNSPECIFIED\n - AUTH_FLOW_TYPE_OAUTH2_0: AuthFlowType: AUTH_TYPE_OAUTH2_0\n - AUTH_FLOW_TYPE_OAUTH1_0: AuthFlowType: AUTH_TYPE_OAUTH1_0",
      "title": "AuthFlowType enumerates the type of auth"
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "instillconnectorv1alphaHealthCheckRequest": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "title": "Service name to check for its readiness status"
        }
      },
      "title": "HealthCheckRequest represents a request to health check a service"
    },
    "instillconnectorv1alphaHealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/instillconnectorv1alphaHealthCheckResponseServingStatus",
          "title": "Status is the instance of the enum type ServingStatus"
        }
      },
      "title": "HealthCheckResponse represents a response for a service heath status"
    },
    "instillconnectorv1alphaHealthCheckResponseServingStatus": {
      "type": "string",
      "enum": [
        "SERVING_STATUS_UNSPECIFIED",
        "SERVING_STATUS_SERVING",
        "SERVING_STATUS_NOT_SERVING"
      ],
      "default": "SERVING_STATUS_UNSPECIFIED",
      "description": "- SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED\n - SERVING_STATUS_SERVING: Serving status: SERVING\n - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING",
      "title": "ServingStatus enumerates the status of a queried service"
    },
    "instillconnectorv1alphaLivenessResponse": {
      "type": "object",
      "properties": {
        "health_check_response": {
          "$ref": "#/definitions/instillconnectorv1alphaHealthCheckResponse",
          "title": "HealthCheckResponse message"
        }
      },
      "title": "LivenessResponse represents a response for a service liveness status"
    },
    "instillconnectorv1alphaReadinessResponse": {
      "type": "object",
      "properties": {
        "health_check_response": {
          "$ref": "#/definitions/instillconnectorv1alphaHealthCheckResponse",
          "title": "HealthCheckResponse message"
        }
      },
      "title": "ReadinessResponse represents a response for a service readiness status"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    },
    "v1alphaAdvancedAuth": {
      "type": "object",
      "properties": {
        "auth_flow_type": {
          "$ref": "#/definitions/AdvancedAuthAuthFlowType",
          "title": "AdvancedAuth auth flow type"
        },
        "predicate_key": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "AdvancedAuth predicate key, i.e., the JSON Path to a field in the connectorSpecification that should exist for the advanced auth to be applicable"
        },
        "predicate_value": {
          "type": "string",
          "title": "AdvancedAuth predicate value, i.e., the value of the predicate key fields for the advanced auth to be applicable"
        },
        "oauth_config_specification": {
          "$ref": "#/definitions/v1alphaOauthConfigSpecification",
          "title": "OauthConfigSpecification represents OAuth config specification"
        }
      },
      "description": "Additional and optional specification object to describe what an 'advanced' Auth flow would need to function.\n- A connector should be able to fully function with the configuration as described by the ConnectorSpecification in a 'basic' mode.\n- The 'advanced' mode provides easier UX for the user with UI improvements and automations. However, this requires further setup on the\nserver side by instance or workspace admins beforehand. The trade-off is that the user does not have to provide as many technical\ninputs anymore and the auth process is faster and easier to complete."
    },
    "v1alphaConnectionType": {
      "type": "string",
      "enum": [
        "CONNECTION_TYPE_UNSPECIFIED",
        "CONNECTION_TYPE_DIRECTNESS",
        "CONNECTION_TYPE_API",
        "CONNECTION_TYPE_FILE",
        "CONNECTION_TYPE_DATABASE",
        "CONNECTION_TYPE_CUSTOM"
      ],
      "default": "CONNECTION_TYPE_UNSPECIFIED",
      "description": "- CONNECTION_TYPE_UNSPECIFIED: ConnectionType: UNSPECIFIED\n - CONNECTION_TYPE_DIRECTNESS: ConnectionType: DIRECTNESS\n - CONNECTION_TYPE_API: ConnectionType: API\n - CONNECTION_TYPE_FILE: ConnectionType: FILE\n - CONNECTION_TYPE_DATABASE: ConnectionType: DATABASE\n - CONNECTION_TYPE_CUSTOM: ConnectionType: CUSTOM",
      "title": "ConnectionType enumerates a connection type"
    },
    "v1alphaConnector": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Connector UUID",
          "readOnly": true
        },
        "connector_definition_id": {
          "type": "string",
          "title": "Connector Definition UUID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Connector name",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "title": "Connector description",
          "readOnly": true
        },
        "configuration": {
          "$ref": "#/definitions/v1alphaSpec",
          "title": "Connector configuration for the spec"
        },
        "connector_type": {
          "$ref": "#/definitions/v1alphaConnectorType",
          "title": "Connector type"
        },
        "tombstone": {
          "type": "boolean",
          "title": "Connector tombstone",
          "readOnly": true
        },
        "owner_id": {
          "type": "string",
          "title": "Connector owner UUID",
          "readOnly": true
        },
        "full_name": {
          "type": "string",
          "title": "Connector full name (i.e., owner_name/connector_name)",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Connector created time",
          "readOnly": true
        },
        "update_at": {
          "type": "string",
          "format": "date-time",
          "title": "Connector update time",
          "readOnly": true
        }
      },
      "title": "Connector represents a connector data model"
    },
    "v1alphaConnectorType": {
      "type": "string",
      "enum": [
        "CONNECTOR_TYPE_UNSPECIFIED",
        "CONNECTOR_TYPE_SOURCE",
        "CONNECTOR_TYPE_DESTINATION"
      ],
      "default": "CONNECTOR_TYPE_UNSPECIFIED",
      "description": "- CONNECTOR_TYPE_UNSPECIFIED: ConnectorType: UNSPECIFIED\n - CONNECTOR_TYPE_SOURCE: ConnectorType: SOURCE\n - CONNECTOR_TYPE_DESTINATION: ConnectorType: DESTINATION",
      "title": "ConnectorType enumerates connector types"
    },
    "v1alphaCreateConnectorRequest": {
      "type": "object",
      "properties": {
        "connector_definition_id": {
          "type": "string",
          "title": "Connector definition UUID",
          "required": [
            "connector_definition_id"
          ]
        },
        "connector_type": {
          "$ref": "#/definitions/v1alphaConnectorType",
          "title": "Connector type"
        },
        "name": {
          "type": "string",
          "title": "Connector name",
          "required": [
            "name"
          ]
        },
        "description": {
          "type": "string",
          "title": "Connector description"
        },
        "configuration": {
          "$ref": "#/definitions/v1alphaSpec",
          "title": "Connector configuration for the spec"
        }
      },
      "title": "CreateConnectorRequest represents a request to create a connector",
      "required": [
        "connector_definition_id",
        "name"
      ]
    },
    "v1alphaCreateConnectorResponse": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/v1alphaConnector",
          "title": "A connector instance"
        }
      },
      "title": "CreateConnectorResponse represents a response for a connector instance"
    },
    "v1alphaDefinitionView": {
      "type": "string",
      "enum": [
        "DEFINITION_VIEW_UNSPECIFIED",
        "DEFINITION_VIEW_BASIC",
        "DEFINITION_VIEW_FULL"
      ],
      "default": "DEFINITION_VIEW_UNSPECIFIED",
      "description": "DefinitionView enumerates the definition views\n\n - DEFINITION_VIEW_UNSPECIFIED: DefinitionView: UNSPECIFIED\n - DEFINITION_VIEW_BASIC: DefinitionView: BASIC\n - DEFINITION_VIEW_FULL: DefinitionView: FULL",
      "title": "////////////////////////////////////////////////\nFor connector definition methods"
    },
    "v1alphaDeleteConnectorResponse": {
      "type": "object",
      "title": "DeleteConnectorResponse represents an empty response"
    },
    "v1alphaDestinationDefinition": {
      "type": "object",
      "properties": {
        "destination_definition_id": {
          "type": "string",
          "title": "DestinationDefinition UUID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "DestinationDefinition name",
          "readOnly": true
        },
        "docker_repository": {
          "type": "string",
          "title": "DestinationDefinition Docker repository",
          "readOnly": true
        },
        "docker_image_tag": {
          "type": "string",
          "title": "DestinationDefinition Docker image tag",
          "readOnly": true
        },
        "documentation_url": {
          "type": "string",
          "title": "DestinationDefinition documentation URL",
          "readOnly": true
        },
        "icon": {
          "type": "string",
          "title": "DestinationDefinition icon",
          "readOnly": true
        },
        "connection_type": {
          "$ref": "#/definitions/v1alphaConnectionType",
          "title": "DestinationDefinition connection type"
        },
        "spec": {
          "$ref": "#/definitions/v1alphaSpec",
          "title": "DestinationDefinition spec (i.e.,\nio.airbyte.protocol.models.ConnectorSpecification)"
        },
        "tombstone": {
          "type": "boolean",
          "title": "DestinationDefinition tombstone, i.e., if not set or false, the\nconfiguration is active, or otherwise, if true, this configuration is\npermanently off",
          "readOnly": true
        },
        "public": {
          "type": "boolean",
          "title": "DestinationDefinition public flag, i.e., true if this connector definition\nis available to all workspaces",
          "readOnly": true
        },
        "custom": {
          "type": "boolean",
          "title": "DestinationDefinition custom flag, i.e., whether this is a custom connector\ndefinition",
          "readOnly": true
        },
        "release_stage": {
          "$ref": "#/definitions/v1alphaReleaseStage",
          "title": "DestinationDefinition release stage"
        },
        "release_date": {
          "$ref": "#/definitions/typeDate",
          "description": "DestinationDefinition release date, i.e., the date when this connector was\nfirst released, in yyyy-mm-dd format."
        },
        "resource_requirements": {
          "type": "object",
          "title": "DestinationDefinition resource requirements",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "DestinationDefinition created time",
          "readOnly": true
        },
        "update_at": {
          "type": "string",
          "format": "date-time",
          "title": "DestinationDefinition update time",
          "readOnly": true
        }
      },
      "title": "///////////////////////////////////////////////////////////////////////////\nDestinationDefinition represents the definition of a destination connector"
    },
    "v1alphaGetConnectorResponse": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/v1alphaConnector",
          "title": "A connector instance"
        }
      },
      "title": "GetConnectorResponse represents a response for a connector"
    },
    "v1alphaGetDestinationDefinitionResponse": {
      "type": "object",
      "properties": {
        "destination_definition": {
          "$ref": "#/definitions/v1alphaDestinationDefinition",
          "title": "A SourceDefinition instance"
        }
      },
      "title": "GetDestinationDefinitionResponse represents a response for a destination definition"
    },
    "v1alphaGetSourceDefinitionResponse": {
      "type": "object",
      "properties": {
        "source_definition": {
          "$ref": "#/definitions/v1alphaSourceDefinition",
          "title": "A SourceDefinition instance"
        }
      },
      "title": "GetSourceDefinitionResponse represents a response for a source definition"
    },
    "v1alphaListConnectorResponse": {
      "type": "object",
      "properties": {
        "connectors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaConnector"
          },
          "title": "A list of connector instances",
          "readOnly": true
        },
        "next_page_cursor": {
          "type": "string",
          "title": "Next page cursor",
          "readOnly": true
        }
      },
      "title": "ListConnectorResponse represents a response for a list of connectors"
    },
    "v1alphaListDestinationDefinitionResponse": {
      "type": "object",
      "properties": {
        "destination_definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaDestinationDefinition"
          },
          "title": "A list of SourceDefinition instances",
          "readOnly": true
        },
        "next_page_cursor": {
          "type": "string",
          "title": "Next page cursor",
          "readOnly": true
        }
      },
      "title": "ListDestinationDefinitionResponse represents a response for a list of destination definitions"
    },
    "v1alphaListSourceDefinitionResponse": {
      "type": "object",
      "properties": {
        "source_definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaSourceDefinition"
          },
          "title": "A list of SourceDefinition instances",
          "readOnly": true
        },
        "next_page_cursor": {
          "type": "string",
          "title": "Next page cursor",
          "readOnly": true
        }
      },
      "title": "ListSourceDefinitionResponse represents a response for a list of source definitions"
    },
    "v1alphaOauthConfigSpecification": {
      "type": "object",
      "properties": {
        "oauth_user_input_from_connector_config_specification": {
          "type": "object",
          "description": "OAuth specific blob. This is a Json Schema used to validate Json configurations used as input to OAuth.\nMust be a valid non-nested JSON that refers to properties from ConnectorSpecification.connectionSpecification\nusing special annotation 'path_in_connector_config'.\nThese are input values the user is entering through the UI to authenticate to the connector, that might also shared\nas inputs for syncing data via the connector.\n\nExamples:\n\nif no connector values is shared during oauth flow, oauth_user_input_from_connector_config_specification=[]\nif connector values such as 'app_id' inside the top level are used to generate the API url for the oauth flow,\n  oauth_user_input_from_connector_config_specification={\n    app_id: {\n      type: string\n      path_in_connector_config: ['app_id']\n    }\n  }\nif connector values such as 'info.app_id' nested inside another object are used to generate the API url for the oauth flow,\n oauth_user_input_from_connector_config_specification={\n   app_id: {\n     type: string\n     path_in_connector_config: ['info', 'app_id']\n   }\n }",
          "readOnly": true
        },
        "complete_oauth_output_specification": {
          "type": "object",
          "description": "Examples:\n\n    complete_oauth_output_specification={\n      refresh_token: {\n        type: string,\n        path_in_connector_config: ['credentials', 'refresh_token']\n      }\n    }",
          "title": "OAuth specific blob. This is a Json Schema used to validate Json configurations produced by the OAuth flows as they are\nreturned by the distant OAuth APIs.\nMust be a valid JSON describing the fields to merge back to `ConnectorSpecification.connectionSpecification`.\nFor each field, a special annotation `path_in_connector_config` can be specified to determine where to merge it,",
          "readOnly": true
        },
        "complete_oauth_server_input_specification": {
          "type": "object",
          "description": "OAuth specific blob. This is a Json Schema used to validate Json configurations persisted as Airbyte Server configurations.\nMust be a valid non-nested JSON describing additional fields configured by the Airbyte Instance or Workspace Admins to be used by the\nserver when completing an OAuth flow (typically exchanging an auth code for refresh token).\n\nExamples:\n\n    complete_oauth_server_input_specification={\n      client_id: {\n        type: string\n      },\n      client_secret: {\n        type: string\n      }\n    }",
          "readOnly": true
        },
        "complete_oauth_server_output_specification": {
          "type": "object",
          "description": "Examples:\n\n      complete_oauth_server_output_specification={\n        client_id: {\n          type: string,\n          path_in_connector_config: ['credentials', 'client_id']\n        },\n        client_secret: {\n          type: string,\n          path_in_connector_config: ['credentials', 'client_secret']\n        }\n      }",
          "title": "OAuth specific blob. This is a Json Schema used to validate Json configurations persisted as Airbyte Server configurations that\nalso need to be merged back into the connector configuration at runtime.\nThis is a subset configuration of `complete_oauth_server_input_specification` that filters fields out to retain only the ones that\nare necessary for the connector to function with OAuth. (some fields could be used during oauth flows but not needed afterwards, therefore\nthey would be listed in the `complete_oauth_server_input_specification` but not `complete_oauth_server_output_specification`)\nMust be a valid non-nested JSON describing additional fields configured by the Airbyte Instance or Workspace Admins to be used by the\nconnector when using OAuth flow APIs.\nThese fields are to be merged back to `ConnectorSpecification.connectionSpecification`.\nFor each field, a special annotation `path_in_connector_config` can be specified to determine where to merge it,",
          "readOnly": true
        }
      },
      "title": "OauthConfigSpecification represents oauth config specification"
    },
    "v1alphaReleaseStage": {
      "type": "string",
      "enum": [
        "RELEASE_STAGE_UNSPECIFIED",
        "RELEASE_STAGE_ALPHA",
        "RELEASE_STAGE_BETA",
        "RELEASE_STAGE_GENERALLY_AVAILABLE",
        "RELEASE_STAGE_CUSTOM"
      ],
      "default": "RELEASE_STAGE_UNSPECIFIED",
      "description": "- RELEASE_STAGE_UNSPECIFIED: ReleaseStage: UNSPECIFIED\n - RELEASE_STAGE_ALPHA: ReleaseStage: ALPHA\n - RELEASE_STAGE_BETA: ReleaseStage: BETA\n - RELEASE_STAGE_GENERALLY_AVAILABLE: ReleaseStage: GENERALLY_AVAILABLE\n - RELEASE_STAGE_CUSTOM: ReleaseStage: CUSTOM",
      "title": "ReleaseStage enumerates the release stages"
    },
    "v1alphaSourceDefinition": {
      "type": "object",
      "properties": {
        "source_definition_id": {
          "type": "string",
          "title": "SourceDefinition UUID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "SourceDefinition name",
          "readOnly": true
        },
        "docker_repository": {
          "type": "string",
          "title": "SourceDefinition Docker repository",
          "readOnly": true
        },
        "docker_image_tag": {
          "type": "string",
          "title": "SourceDefinition Docker image tag",
          "readOnly": true
        },
        "documentation_url": {
          "type": "string",
          "title": "SourceDefinition documentation URL",
          "readOnly": true
        },
        "icon": {
          "type": "string",
          "title": "SourceDefinition icon",
          "readOnly": true
        },
        "connection_type": {
          "$ref": "#/definitions/v1alphaConnectionType",
          "title": "SourceDefinition connection type"
        },
        "spec": {
          "$ref": "#/definitions/v1alphaSpec",
          "title": "SourceDefinition spec (i.e.,\nio.airbyte.protocol.models.ConnectorSpecification)"
        },
        "tombstone": {
          "type": "boolean",
          "title": "SourceDefinition tombstone, i.e., if not set or false, the\nconfiguration is active, or otherwise, if true, this configuration is\npermanently off",
          "readOnly": true
        },
        "public": {
          "type": "boolean",
          "title": "SourceDefinition public flag, i.e., true if this connector definition\nis available to all workspaces",
          "readOnly": true
        },
        "custom": {
          "type": "boolean",
          "title": "SourceDefinition custom flag, i.e., whether this is a custom connector\ndefinition",
          "readOnly": true
        },
        "release_stage": {
          "$ref": "#/definitions/v1alphaReleaseStage",
          "title": "SourceDefinition release stage"
        },
        "release_date": {
          "$ref": "#/definitions/typeDate",
          "description": "SourceDefinition release date, i.e., the date when this connector was\nfirst released, in yyyy-mm-dd format."
        },
        "resource_requirements": {
          "type": "object",
          "title": "SourceDefinition resource requirements",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "SourceDefinition created time",
          "readOnly": true
        },
        "update_at": {
          "type": "string",
          "format": "date-time",
          "title": "SourceDefinition update time",
          "readOnly": true
        }
      },
      "title": "/////////////////////////////////////////////////////////////////\nSourceDefinition represents the definition of a source connector"
    },
    "v1alphaSpec": {
      "type": "object",
      "properties": {
        "documentation_url": {
          "type": "string",
          "title": "Spec documentation URL",
          "readOnly": true
        },
        "changelog_url": {
          "type": "string",
          "title": "Spec changelog URL",
          "readOnly": true
        },
        "connection_specification": {
          "type": "object",
          "title": "Spec connection specification",
          "readOnly": true
        },
        "supports_incremental": {
          "type": "boolean",
          "title": "Spec supports incremental flag, i.e., if the connector supports incremental\nmode or not",
          "readOnly": true
        },
        "supports_normalization": {
          "type": "boolean",
          "title": "Spec supports normalization flag, i.e., if the connector supports\nnormalization or not",
          "readOnly": true
        },
        "supports_dbt": {
          "type": "boolean",
          "title": "Spec supports dbt flag, i.e., if the connector supports DBT or not",
          "readOnly": true
        },
        "supported_destination_sync_modes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaSupportedDestinationSyncModes"
          },
          "title": "Spec destination sync mode, i.e., a list of destination sync modes\nsupported by the connector",
          "readOnly": true
        },
        "advanced_auth": {
          "$ref": "#/definitions/v1alphaAdvancedAuth",
          "title": "Spec advanced auth, i.e., additional and optional specification object to\ndescribe what an 'advanced' Auth flow would need to function"
        }
      },
      "title": "//////////////////////////////////\nSpec represents a spec data model"
    },
    "v1alphaSupportedDestinationSyncModes": {
      "type": "string",
      "enum": [
        "SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED",
        "SUPPORTED_DESTINATION_SYNC_MODES_APPEND",
        "SUPPORTED_DESTINATION_SYNC_MODES_OVERWRITE",
        "SUPPORTED_DESTINATION_SYNC_MODES_APPEND_DEDUP"
      ],
      "default": "SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED",
      "description": "- SUPPORTED_DESTINATION_SYNC_MODES_UNSPECIFIED: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_UNSPECIFIED\n - SUPPORTED_DESTINATION_SYNC_MODES_APPEND: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_APPEND\n - SUPPORTED_DESTINATION_SYNC_MODES_OVERWRITE: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_OVERWRITE\n - SUPPORTED_DESTINATION_SYNC_MODES_APPEND_DEDUP: SupportedDestinationSyncModes: DESTINATION_SYNC_MODE_APPEND_DEDUP",
      "title": "SupportedDestinationSyncMode enumerates destination sync mode"
    },
    "v1alphaUpdateConnectorPatch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Connector name"
        },
        "description": {
          "type": "string",
          "title": "Connector description"
        },
        "configuration": {
          "$ref": "#/definitions/v1alphaSpec",
          "title": "Connector configuration for the spec"
        },
        "tombstone": {
          "type": "boolean",
          "title": "Connector tombstone"
        }
      },
      "title": "UpdateConnectorPatch represents a patch to update a connector"
    },
    "v1alphaUpdateConnectorResponse": {
      "type": "object",
      "properties": {
        "connector": {
          "$ref": "#/definitions/v1alphaConnector",
          "title": "A connector instance"
        }
      },
      "title": "UpdateConnectorResponse represents a response for a connector instance"
    }
  }
}
