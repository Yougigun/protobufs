syntax = "proto3";

package instill.connector.v1alpha;

// Protocol Buffers Well-Known Types
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

// Google API
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

import "instill/connector/v1alpha/definition.proto";
import "instill/connector/v1alpha/spec.proto";

// HealthCheckRequest represents a request to health check a service
message HealthCheckRequest {
  // Service name to check for its readiness status
  string service = 1 [(google.api.field_behavior) = OPTIONAL];
}

// HealthCheckResponse represents a response for a service heath status
message HealthCheckResponse {
  // ServingStatus enumerates the status of a queried service
  enum ServingStatus {
    // Serving status: UNSPECIFIED
    SERVING_STATUS_UNSPECIFIED = 0;
    // Serving status: SERVING
    SERVING_STATUS_SERVING = 1;
    // Serving status: NOT SERVING
    SERVING_STATUS_NOT_SERVING = 2;
  }

  // Status is the instance of the enum type ServingStatus
  ServingStatus status = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// LivenessRequest represents a request to check a service liveness status
message LivenessRequest {
  // HealthCheckRequest message
  HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// LivenessResponse represents a response for a service liveness status
message LivenessResponse {
  // HealthCheckResponse message
  HealthCheckResponse health_check_response = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ReadinessRequest represents a request to check a service readiness status
message ReadinessRequest {
  // HealthCheckRequest message
  HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// ReadinessResponse represents a response for a service readiness status
message ReadinessResponse {
  // HealthCheckResponse message
  HealthCheckResponse health_check_response = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

//////////////////////////////////////////////////
// For connector definition methods
//
// DefinitionView enumerates the definition views
enum DefinitionView {
  // DefinitionView: UNSPECIFIED
  DEFINITION_VIEW_UNSPECIFIED = 0;
  // DefinitionView: BASIC
  DEFINITION_VIEW_BASIC = 1;
  // DefinitionView: FULL
  DEFINITION_VIEW_FULL = 2;
}

// ListSourceDefinitionRequest represents a request to list source definitions
message ListSourceDefinitionRequest {
  // Page size
  uint64 page_size = 1 [ (google.api.field_behavior) = OPTIONAL ];
  // Page cursor
  string page_cursor = 2 [ (google.api.field_behavior) = OPTIONAL ];
  // Definition view (default is DEFINITION_VIEW_BASIC)
  DefinitionView view = 3 [ (google.api.field_behavior) = OPTIONAL ];
}

// ListSourceDefinitionResponse represents a response for a list of source definitions
message ListSourceDefinitionResponse {
  // A list of SourceDefinition instances
  repeated SourceDefinition source_definitions = 1
      [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Next page cursor
  string next_page_cursor = 2 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// GetSourceDefinitionRequest represents a request to query a source definition
message GetSourceDefinitionRequest {
  // Connector UUID
  string id = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Definition view (default is DEFINITION_VIEW_BASIC)
  DefinitionView view = 2 [ (google.api.field_behavior) = OPTIONAL ];
}

// GetSourceDefinitionResponse represents a response for a source definition
message GetSourceDefinitionResponse {
  // A SourceDefinition instance
  SourceDefinition source_definition = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// ListDestinationDefinitionRequest represents a request to list destination definitions
message ListDestinationDefinitionRequest {
  // Page size
  uint64 page_size = 1 [ (google.api.field_behavior) = OPTIONAL ];
  // Page cursor
  string page_cursor = 2 [ (google.api.field_behavior) = OPTIONAL ];
  // Definition view (default is DEFINITION_VIEW_BASIC)
  DefinitionView view = 3 [ (google.api.field_behavior) = OPTIONAL ];
}

// ListDestinationDefinitionResponse represents a response for a list of destination definitions
message ListDestinationDefinitionResponse {
  // A list of SourceDefinition instances
  repeated DestinationDefinition destination_definitions = 1
      [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Next page cursor
  string next_page_cursor = 2 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// GetDestinationDefinitionRequest represents a request to query a destination definition
message GetDestinationDefinitionRequest {
  // Connector ID
  string id = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Definition view (default is DEFINITION_VIEW_BASIC)
  DefinitionView view = 2 [ (google.api.field_behavior) = OPTIONAL ];
}

// GetDestinationDefinitionResponse represents a response for a destination definition
message GetDestinationDefinitionResponse {
  // A SourceDefinition instance
  DestinationDefinition destination_definition = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// ConnectorType enumerates connector types
enum ConnectorType {
  // ConnectorType: UNSPECIFIED
  CONNECTOR_TYPE_UNSPECIFIED = 0;
  // ConnectorType: SOURCE
  CONNECTOR_TYPE_SOURCE = 1;
  // ConnectorType: DESTINATION
  CONNECTOR_TYPE_DESTINATION = 2;
}

// Connector represents a connector data model
message Connector {
  // Connector UUID
  string id = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector Definition UUID
  string connector_definition_id = 2 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector name
  string name = 3 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector configuration for the spec
  Spec configuration = 4 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector type
  ConnectorType connector_type = 5 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector tombstone
  bool tombstone = 6 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector owner UUID
  string owner_id = 7 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector full name (i.e., owner_name/connector_name)
  string full_name = 8 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector created time
  google.protobuf.Timestamp created_at = 9
  [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Connector update time
  google.protobuf.Timestamp update_at = 10
    [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// CreateConnectorRequest represents a request to create a connector
message CreateConnectorRequest {
  // Connector definition UUID
  string connector_definition_id = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Connector type
  ConnectorType connector_type = 2 [ (google.api.field_behavior) = REQUIRED ];
  // Connector name
  string name = 3 [ (google.api.field_behavior) = REQUIRED ];
  // Connector configuration for the spec
  Spec configuration = 4 [ (google.api.field_behavior) = REQUIRED ];
}

// CreateConnectorResponse represents a response for a connector instance
message CreateConnectorResponse {
  // A connector instance
  Connector connector = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// ListConnectorRequest represents a request to list all connectors
message ListConnectorRequest {
  // Requested connector type
  ConnectorType connector_type = 1 [ (google.api.field_behavior) = OPTIONAL ];
  // Page size
  uint64 page_size = 2 [ (google.api.field_behavior) = OPTIONAL ];
  // Page cursor
  string page_cursor = 3 [ (google.api.field_behavior) = OPTIONAL ];
}

// ListConnectorResponse represents a response for a list of connectors
message ListConnectorResponse {
  // A list of connector instances
  repeated Connector connectors = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Next page cursor
  string next_page_cursor = 2 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// GetConnectorRequest represents a request to query a connector
message GetConnectorRequest {
  // Requested connector type
  ConnectorType connector_type = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Connector name
  string name = 2 [ (google.api.field_behavior) = REQUIRED ];
}

// GetConnectorResponse represents a response for a connector
message GetConnectorResponse {
  // A connector instance
  Connector connector = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// UpdateConnectorPatch represents a patch to update a connector
message UpdateConnectorPatch {
  // Connector name
  string name = 1 [ (google.api.field_behavior) = OPTIONAL ];
  // Connector configuration for the spec
  Spec configuration = 2 [ (google.api.field_behavior) = OPTIONAL ];
  // Connector tombstone
  bool tombstone = 3 [ (google.api.field_behavior) = OPTIONAL ];
}

// UpdateConnectorRequest represents a request to update a connector
message UpdateConnectorRequest {
  // Requested connector type
  ConnectorType connector_type = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Connector name
  string name = 2 [ (google.api.field_behavior) = REQUIRED ];
  // Connector patch to update
  UpdateConnectorPatch connector_patch = 3
      [ (google.api.field_behavior) = REQUIRED ];
  // Update mask for a connector instance
  google.protobuf.FieldMask field_mask = 4
      [ (google.api.field_behavior) = REQUIRED ];
}

// UpdateConnectorResponse represents a response for a connector instance
message UpdateConnectorResponse {
  // A connector instance
  Connector connector = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// DeleteConnectorRequest represents a request to delete a connector
message DeleteConnectorRequest {
  // Requested connector type
  ConnectorType connector_type = 1 [ (google.api.field_behavior) = REQUIRED ];
  // Connector name
  string name = 2 [ (google.api.field_behavior) = REQUIRED ];
}

// DeleteConnectorResponse represents an empty response
message DeleteConnectorResponse {}

///////////////////////////////////////////////////////////////////////////////
// Connector service responds to incoming connector requests.
service ConnectorService {

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get : "/__liveness"
      additional_bindings : [ {get : "/health/connector"} ]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get : "/__readiness"
    };
  }

  // ListSourceDefinition method receives a ListSourceDefinitionRequest message and returns
  // a ListSourceDefinitionResponse message.
  rpc ListSourceDefinition(ListSourceDefinitionRequest) returns (ListSourceDefinitionResponse) {
    option (google.api.http) = {
      get : "/connector-source-definitions"
    };
  }

  // GetSourceDefinition method receives a GetSourceDefinitionRequest message and returns
  // a GetSourceDefinitionResponse message.
  rpc GetSourceDefinition(GetSourceDefinitionRequest) returns (GetSourceDefinitionResponse) {
    option (google.api.http) = {
      get : "/connector-source-definitions/{id}"
    };
  }

  // ListDestinationDefinition method receives a ListDestinationDefinitionRequest message and returns
  // a ListDestinationDefinitionResponse message.
  rpc ListDestinationDefinition(ListDestinationDefinitionRequest) returns (ListDestinationDefinitionResponse) {
    option (google.api.http) = {
      get : "/connector-destination-definitions"
    };
  }

  // GetDestinationDefinition method receives a GetDestinationDefinitionRequest message and returns
  // a GetDestinationDefinitionResponse message.
  rpc GetDestinationDefinition(GetDestinationDefinitionRequest) returns (GetDestinationDefinitionResponse) {
    option (google.api.http) = {
      get : "/connector-destination-definitions/{id}"
    };
  }

  // CreateConnector method receives a CreateConnectorRequest message and returns
  // a CreateConnectorResponse message.
  rpc CreateConnector(CreateConnectorRequest) returns (CreateConnectorResponse) {
    option (google.api.http) = {
      post : "/connectors"
      body : "*"
    };
  }

  // ListConnector method receives a ListConnectorRequest message and returns
  // a ListConnectorResponse message.
  rpc ListConnector(ListConnectorRequest) returns (ListConnectorResponse) {
    option (google.api.http) = {
      get : "/connectors"
    };
  }

  // GetConnector method receives a GetConnectorRequest message and returns
  // a GetConnectorResponse message.
  rpc GetConnector(GetConnectorRequest) returns (GetConnectorResponse) {
    option (google.api.http) = {
      get : "/connectors/{name}"
    };
  }

  // UpdateConnector method receives a UpdateConnectorRequest message and returns
  // a UpdateConnectorResponse message.
  rpc UpdateConnector(UpdateConnectorRequest) returns (UpdateConnectorResponse) {
    option (google.api.http) = {
      patch : "/connectors/{name}"
      body : "connector_patch"
    };
  }

  // DeleteConnector method receives a DeleteConnectorRequest message and returns
  // a DeleteConnectorResponse message.
  rpc DeleteConnector(DeleteConnectorRequest) returns (DeleteConnectorResponse) {
    option (google.api.http) = {
      delete : "/connectors/{name}"
    };
  }
}
