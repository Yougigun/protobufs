syntax = "proto3";

package instill.connector.v1alpha;

// Google API
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

import "instill/connector/v1alpha/definition.proto";

// HealthCheckRequest represents a request to health check a service
message HealthCheckRequest {
  // Service name to check for its readiness status
  string service = 1 [(google.api.field_behavior) = OPTIONAL];
}

// HealthCheckResponse represents a response for a service heath status
message HealthCheckResponse {
  // ServingStatus enumerates the status of a queried service
  enum ServingStatus {
    // Serving status: UNSPECIFIED
    SERVING_STATUS_UNSPECIFIED = 0;
    // Serving status: SERVING
    SERVING_STATUS_SERVING = 1;
    // Serving status: NOT SERVING
    SERVING_STATUS_NOT_SERVING = 2;
  }

  // Status is the instance of the enum type ServingStatus
  ServingStatus status = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// LivenessRequest represents a request to check a service liveness status
message LivenessRequest {
  // HealthCheckRequest message
  HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// LivenessResponse represents a response for a service liveness status
message LivenessResponse {
  // HealthCheckResponse message
  HealthCheckResponse health_check_response = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ReadinessRequest represents a request to check a service readiness status
message ReadinessRequest {
  // HealthCheckRequest message
  HealthCheckRequest health_check_request = 1 [(google.api.field_behavior) = OPTIONAL];
}

// ReadinessResponse represents a response for a service readiness status
message ReadinessResponse {
  // HealthCheckResponse message
  HealthCheckResponse health_check_response = 1 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// ListSourceDefinitionRequest represents a request to list source definitions
message ListSourceDefinitionRequest {
  // Page size
  uint64 page_size = 2 [ (google.api.field_behavior) = OPTIONAL ];
  // Page token
  string page_token = 3 [ (google.api.field_behavior) = OPTIONAL ];
}

// ListSourceDefinitionResponse represents a response for a list of source definitions
message ListSourceDefinitionResponse {
  // A list of SourceDefinition instances
  repeated SourceDefinition source_definitions = 1
      [ (google.api.field_behavior) = OUTPUT_ONLY ];
  // Next page token
  string next_page_token = 2 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

// GetSourceDefinitionRequest represents a request to query a source definition
message GetSourceDefinitionRequest {
  // Connector ID
  string id = 1 [ (google.api.field_behavior) = OPTIONAL ];
  // Connector name
  string name = 2 [ (google.api.field_behavior) = OPTIONAL ];
}

// GetSourceDefinitionResponse represents a response for a source definition
message GetSourceDefinitionResponse {
  // A SourceDefinition instance
  SourceDefinition connector_definition = 1 [ (google.api.field_behavior) = OUTPUT_ONLY ];
}

///////////////////////////////////////////////////////////////////////////////
// Connector service responds to incoming connector requests.
service ConnectorService {

  // Liveness method receives a LivenessRequest message and returns a
  // LivenessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Liveness(LivenessRequest) returns (LivenessResponse) {
    option (google.api.http) = {
      get : "/__liveness"
      additional_bindings : [ {get : "/health/connector"} ]
    };
  }

  // Readiness method receives a ReadinessRequest message and returns a
  // ReadinessResponse message.
  // See https://github.com/grpc/grpc/blob/master/doc/health-checking.md
  rpc Readiness(ReadinessRequest) returns (ReadinessResponse) {
    option (google.api.http) = {
      get : "/__readiness"
    };
  }

  // ListSourceDefinition method receives a ListSourceDefinitionRequest message and returns
  // a ListSourceDefinitionResponse message.
  rpc ListSourceDefinition(ListSourceDefinitionRequest) returns (ListSourceDefinitionResponse) {
    option (google.api.http) = {
      get : "/connectors/source-definitions"
    };
  }

  // GetSourceDefinition method receives a GetSourceDefinitionRequest message and returns
  // a GetSourceDefinitionResponse message.
  rpc GetSourceDefinition(GetSourceDefinitionRequest) returns (GetSourceDefinitionResponse) {
    option (google.api.http) = {
      get : "/connectors/source-definitions/{name}"
    };
  }
}
