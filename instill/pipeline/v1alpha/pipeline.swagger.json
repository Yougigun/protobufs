{
  "swagger": "2.0",
  "info": {
    "title": "instill/pipeline/v1alpha/pipeline.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PipelineService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/__liveness": {
      "get": {
        "summary": "Liveness method receives a LivenessRequest message and returns a\nLivenessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "PipelineService_Liveness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillpipelinev1alphaLivenessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/__readiness": {
      "get": {
        "summary": "Readiness method receives a ReadinessRequest message and returns a\nReadinessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "PipelineService_Readiness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillpipelinev1alphaReadinessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/health/pipeline": {
      "get": {
        "summary": "Liveness method receives a LivenessRequest message and returns a\nLivenessResponse message.\nSee https://github.com/grpc/grpc/blob/master/doc/health-checking.md",
        "operationId": "PipelineService_Liveness2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/instillpipelinev1alphaLivenessResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "health_check_request.service",
            "description": "Service name to check for its readiness status.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/pipelines": {
      "get": {
        "summary": "ListPipeline method receives a ListPipelineRequest message and returns a\nListPipelineResponse message.",
        "operationId": "PipelineService_ListPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaListPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "description": "Page size.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "page_cursor",
            "description": "Page cursor.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "view",
            "description": "PipelineView view (default is PIPELINE_VIEW_BASIC).\n\n - PIPELINE_VIEW_UNSPECIFIED: PipelineView: UNSPECIFIED\n - PIPELINE_VIEW_BASIC: PipelineView: BASIC\n - PIPELINE_VIEW_FULL: PipelineView: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PIPELINE_VIEW_UNSPECIFIED",
              "PIPELINE_VIEW_BASIC",
              "PIPELINE_VIEW_FULL"
            ],
            "default": "PIPELINE_VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      },
      "post": {
        "summary": "CreatePipeline method receives a CreatePipelineRequest message and returns\na CreatePipelineResponse message.",
        "operationId": "PipelineService_CreatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaCreatePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaCreatePipelineRequest"
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/pipelines/{name}": {
      "get": {
        "summary": "GetPipeline method receives a GetPipelineRequest message and returns a\nGetPipelineResponse message.",
        "operationId": "PipelineService_GetPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaGetPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view",
            "description": "PipelineView view (default is PIPELINE_VIEW_BASIC).\n\n - PIPELINE_VIEW_UNSPECIFIED: PipelineView: UNSPECIFIED\n - PIPELINE_VIEW_BASIC: PipelineView: BASIC\n - PIPELINE_VIEW_FULL: PipelineView: FULL",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PIPELINE_VIEW_UNSPECIFIED",
              "PIPELINE_VIEW_BASIC",
              "PIPELINE_VIEW_FULL"
            ],
            "default": "PIPELINE_VIEW_UNSPECIFIED"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      },
      "delete": {
        "summary": "UpdatePipeline method receives a DeletePipelineRequest message and returns\na DeletePipelineResponse message.",
        "operationId": "PipelineService_DeletePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaDeletePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      },
      "patch": {
        "summary": "UpdatePipeline method receives a UpdatePipelineRequest message and returns\na UpdatePipelineResponse message.",
        "operationId": "PipelineService_UpdatePipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaUpdatePipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "description": "Pipeline patch to update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1alphaUpdatePipelinePatch"
            }
          },
          {
            "name": "field_mask",
            "description": "Update mask for a pipeline instance.",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    },
    "/pipelines/{name}/outputs": {
      "post": {
        "summary": "TriggerPipeline method receives a TriggerPipelineRequest message and\nreturns a TriggerPipelineResponse.",
        "operationId": "PipelineService_TriggerPipeline",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1alphaTriggerPipelineResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Pipeline name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "inputs": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/instillpipelinev1alphaInput"
                  },
                  "title": "Input to the pipeline",
                  "required": [
                    "inputs"
                  ]
                }
              },
              "title": "TriggerPipelineRequest represents a request to trigger a pipeline",
              "required": [
                "inputs"
              ]
            }
          }
        ],
        "tags": [
          "PipelineService"
        ]
      }
    }
  },
  "definitions": {
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "instillpipelinev1alphaHealthCheckRequest": {
      "type": "object",
      "properties": {
        "service": {
          "type": "string",
          "title": "Service name to check for its readiness status"
        }
      },
      "title": "HealthCheckRequest represents a request to health check a service"
    },
    "instillpipelinev1alphaHealthCheckResponse": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/instillpipelinev1alphaHealthCheckResponseServingStatus",
          "title": "Status is the instance of the enum type ServingStatus"
        }
      },
      "title": "HealthCheckResponse represents a response for a service heath status"
    },
    "instillpipelinev1alphaHealthCheckResponseServingStatus": {
      "type": "string",
      "enum": [
        "SERVING_STATUS_UNSPECIFIED",
        "SERVING_STATUS_SERVING",
        "SERVING_STATUS_NOT_SERVING"
      ],
      "default": "SERVING_STATUS_UNSPECIFIED",
      "description": "- SERVING_STATUS_UNSPECIFIED: Serving status: UNSPECIFIED\n - SERVING_STATUS_SERVING: Serving status: SERVING\n - SERVING_STATUS_NOT_SERVING: Serving status: NOT SERVING",
      "title": "ServingStatus enumerates the status of a queried service"
    },
    "instillpipelinev1alphaInput": {
      "type": "object",
      "properties": {
        "image_url": {
          "type": "string",
          "title": "Image type URL"
        },
        "image_base64": {
          "type": "string",
          "title": "Image type base64"
        }
      },
      "title": "Input represents the input to a pipeline"
    },
    "instillpipelinev1alphaLivenessResponse": {
      "type": "object",
      "properties": {
        "health_check_response": {
          "$ref": "#/definitions/instillpipelinev1alphaHealthCheckResponse",
          "title": "HealthCheckResponse message"
        }
      },
      "title": "LivenessResponse represents a response for a service liveness status"
    },
    "instillpipelinev1alphaReadinessResponse": {
      "type": "object",
      "properties": {
        "health_check_response": {
          "$ref": "#/definitions/instillpipelinev1alphaHealthCheckResponse",
          "title": "HealthCheckResponse message"
        }
      },
      "title": "ReadinessResponse represents a response for a service readiness status"
    },
    "pipelinev1alphaSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Source name",
          "required": [
            "name"
          ]
        }
      },
      "title": "Source represents a source connector",
      "required": [
        "name"
      ]
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "v1alphaCreatePipelineRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Pipeline name",
          "required": [
            "name"
          ]
        },
        "description": {
          "type": "string",
          "title": "Pipeline description"
        },
        "recipe": {
          "$ref": "#/definitions/v1alphaRecipe",
          "title": "Pipeline recipe"
        }
      },
      "title": "CreatePipelineRequest represents a request to create a pipeline",
      "required": [
        "name"
      ]
    },
    "v1alphaCreatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "A pipeline instance"
        }
      },
      "title": "CreatePipelineResponse represents a response for a pipeline instance"
    },
    "v1alphaDeletePipelineResponse": {
      "type": "object",
      "title": "DeletePipelineResponse represents an empty response"
    },
    "v1alphaDestination": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Destination name",
          "required": [
            "name"
          ]
        }
      },
      "title": "Destination represents a destination connector",
      "required": [
        "name"
      ]
    },
    "v1alphaGetPipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "A pipeline instance"
        }
      },
      "title": "GetPipelineResponse represents a response for a pipeline instance"
    },
    "v1alphaListPipelineResponse": {
      "type": "object",
      "properties": {
        "pipelines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaPipeline"
          },
          "title": "A list of pipeline instances",
          "readOnly": true
        },
        "next_page_cursor": {
          "type": "string",
          "title": "Next page cursor",
          "readOnly": true
        }
      },
      "title": "ListPipelineResponse represents a response for a list of pipelines"
    },
    "v1alphaLogic": {
      "type": "object",
      "title": "Logic represents the content of a logic operator"
    },
    "v1alphaModel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Model name",
          "required": [
            "name"
          ]
        },
        "instance_name": {
          "type": "string",
          "title": "Model instance name",
          "required": [
            "instance_name"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int32",
          "title": "Model version (TO BE DEPRECATED)",
          "required": [
            "version"
          ]
        }
      },
      "title": "Model represents the content of a model",
      "required": [
        "name",
        "instance_name",
        "version"
      ]
    },
    "v1alphaPipeline": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "title": "Pipeline UUID",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "title": "Pipeline name",
          "readOnly": true
        },
        "description": {
          "type": "string",
          "title": "Pipeline description",
          "readOnly": true
        },
        "status": {
          "$ref": "#/definitions/v1alphaPipelineStatus",
          "title": "Pipeline status"
        },
        "recipe": {
          "$ref": "#/definitions/v1alphaRecipe",
          "title": "Pipeline recipe"
        },
        "owner_id": {
          "type": "string",
          "title": "Connector owner UUID",
          "readOnly": true
        },
        "full_name": {
          "type": "string",
          "title": "Connector full name (i.e., owner_name/pipeline_name)",
          "readOnly": true
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "title": "Pipeline created time",
          "readOnly": true
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "title": "Pipeline updated time",
          "readOnly": true
        }
      },
      "title": "Pipeline represents the content of a pipeline"
    },
    "v1alphaPipelineStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "STATUS_INACTIVATED",
        "STATUS_ACTIVATED",
        "STATUS_ERROR"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": "- STATUS_UNSPECIFIED: Status: UNSPECIFIED\n - STATUS_INACTIVATED: Status: INACTIVATED\n - STATUS_ACTIVATED: Status: ACTIVATED\n - STATUS_ERROR: Status: ERROR",
      "title": "Status enumerates the status of a model version"
    },
    "v1alphaPipelineView": {
      "type": "string",
      "enum": [
        "PIPELINE_VIEW_UNSPECIFIED",
        "PIPELINE_VIEW_BASIC",
        "PIPELINE_VIEW_FULL"
      ],
      "default": "PIPELINE_VIEW_UNSPECIFIED",
      "description": "- PIPELINE_VIEW_UNSPECIFIED: PipelineView: UNSPECIFIED\n - PIPELINE_VIEW_BASIC: PipelineView: BASIC\n - PIPELINE_VIEW_FULL: PipelineView: FULL",
      "title": "PipelineView enumerates the pipeline views"
    },
    "v1alphaRecipe": {
      "type": "object",
      "properties": {
        "source": {
          "$ref": "#/definitions/pipelinev1alphaSource",
          "title": "A source connector instance"
        },
        "destination": {
          "$ref": "#/definitions/v1alphaDestination",
          "title": "A destination connector instance"
        },
        "models": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaModel"
          },
          "title": "A list of model instances",
          "required": [
            "models"
          ]
        },
        "logics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1alphaLogic"
          },
          "title": "A list of logic instances",
          "required": [
            "logics"
          ]
        }
      },
      "title": "Model represents the content of a recipe",
      "required": [
        "models",
        "logics"
      ]
    },
    "v1alphaTriggerPipelineBinaryFileUploadResponse": {
      "type": "object",
      "properties": {
        "output": {
          "type": "object",
          "title": "Output from a pipeline"
        }
      },
      "title": "TriggerPipelineBinaryFileUploadResponse represents a response for the output\nof a pipeline"
    },
    "v1alphaTriggerPipelineResponse": {
      "type": "object",
      "properties": {
        "output": {
          "type": "object",
          "title": "Output from a pipeline"
        }
      },
      "title": "TriggerPipelineResponse represents a response for the output of a pipeline"
    },
    "v1alphaUpdatePipelinePatch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Pipeline name"
        },
        "description": {
          "type": "string",
          "title": "Pipeline description"
        },
        "status": {
          "$ref": "#/definitions/v1alphaPipelineStatus",
          "title": "Pipeline status"
        },
        "recipe": {
          "$ref": "#/definitions/v1alphaRecipe",
          "title": "Pipeline recipe"
        }
      },
      "title": "UpdatePipelinePatch represents a patch to update a pipeline"
    },
    "v1alphaUpdatePipelineResponse": {
      "type": "object",
      "properties": {
        "pipeline": {
          "$ref": "#/definitions/v1alphaPipeline",
          "title": "A pipeline instance"
        }
      },
      "title": "UpdatePipelineResponse represents a response for a pipeline instance"
    }
  }
}
